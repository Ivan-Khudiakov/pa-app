{"version":3,"sources":["components/PersonalAccount/ProfilePage/ProfilePage.module.css","components/LoginPage/LoginPage.module.css","common/Paginator/Paginator.module.css","components/PersonalAccount/CallHistoryPage/CallHostoryPage.module.css","components/PersonalAccount/BalancePage/BalancePage.module.css","api/api.ts","redux/profile-reducer.ts","redux/redux-store.ts","components/LoginPage/LoginPage.tsx","components/PersonalAccount/Navbar/Navbar.tsx","components/PersonalAccount/ProfilePage/ProfilePage.tsx","common/Paginator/Paginator.tsx","redux/selectors.ts","components/PersonalAccount/CallHistoryPage/CallHistoryPage.tsx","components/PersonalAccount/BalancePage/BalancePage.tsx","components/PersonalAccount/PersonalAccount.tsx","App.tsx","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","process","profileAPI","get","SET_PROFILE","initialState","data","name","avatar","id","date","time","duration","cost","payment","reducer","combineReducers","profile","state","action","type","store","createStore","applyMiddleware","thunkMiddleware","LoginPage","setIsLogin","useState","email","password","form","setForm","error","setError","changeHandler","event","f","target","value","className","styles","login","errorMessage","onSubmit","e","preventDefault","onChange","htmlFor","onClick","loginHandler","Navbar","logoutHandler","to","href","ProfilePage","useSelector","profileContainer","src","alt","profileName","profileInfo","Paginator","React","memo","pageSize","totalCount","currentPage","setCurrentPage","pagesCount","Math","ceil","pages","i","push","paginatorContainer","map","num","arrayPartialSelector","array","last","first","slice","CallHistoryPage","calls","current","useMemo","callContainer","call","length","BalancePage","balance","o","reduce","sum","item","balanceContainer","PersonalAccount","dispatch","useDispatch","useEffect","a","response","console","log","exact","path","render","App","isLogin","history","useHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3af62c8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"ProfilePage_profileContainer__1J4GV\",\"profile\":\"ProfilePage_profile__2Zcmw\",\"avatar\":\"ProfilePage_avatar__b3koM\",\"profileName\":\"ProfilePage_profileName__EDOeL\",\"profileInfo\":\"ProfilePage_profileInfo__Rgc8Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__2uF2V\",\"errorMessage\":\"LoginPage_errorMessage__2JZ9x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorContainer\":\"Paginator_paginatorContainer__3xC7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callContainer\":\"CallHostoryPage_callContainer__2AklW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceContainer\":\"BalancePage_balanceContainer__AaItJ\"};","import axios from \"axios\"\r\nimport {ProfileType} from \"../redux/profile-reducer\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: `${process.env.PUBLIC_URL}/db.json`\r\n})\r\n\r\nexport const profileAPI = {\r\n    getProfile() {\r\n        return instance.get<ProfileType>(\"\")\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\"\r\nimport {profileAPI}  from \"../api/api\"\r\n\r\nexport type CallType = {\r\n    id: number\r\n    date: string\r\n    time: string\r\n    duration: number\r\n    cost: number\r\n}\r\nexport type PaymentType = {\r\n    id: number\r\n    date: string\r\n    time: string\r\n    payment: number\r\n}\r\nexport type ProfileType = {\r\n    name: string\r\n    avatar: string\r\n    \"package of services\": string\r\n    \"registration date\": string\r\n    \"calls\": Array<CallType>\r\n    \"balance history\": Array<PaymentType>\r\n}\r\n\r\nconst SET_PROFILE = \"profile/SET_PROFILE\"\r\n\r\ntype ActionType = ReturnType<typeof setProfile>\r\n\r\nconst initialState = {\r\n    data: {\r\n        name: \"\",\r\n        avatar: \"\",\r\n        \"package of services\": \"\",\r\n        \"registration date\": \"\",\r\n        \"calls\": [\r\n            {id: 0, date: \"\", time: \"\", duration: 0, cost: 0},\r\n        ],\r\n        \"balance history\": [\r\n            {id: 0, date: \"\", time: \"\", payment: 0},\r\n        ]\r\n    }\r\n}\r\n\r\nexport type ProfileStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case SET_PROFILE: {\r\n           return {...state, data: action.profile}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setProfile = (profile: ProfileType) => ({type: SET_PROFILE, profile} as const)\r\n\r\nexport const getProfile = () => async (dispatch: Dispatch) => {\r\n    try {\r\n        let response = await profileAPI.getProfile()\r\n        dispatch(setProfile(response.data))\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","import {applyMiddleware, createStore } from \"redux\"\r\nimport { combineReducers } from \"redux\"\r\nimport {profileReducer} from \"./profile-reducer\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nconst reducer = combineReducers({\r\n    profile: profileReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunkMiddleware))\r\n\r\n\r\n","import React, {ChangeEvent, useState} from \"react\"\r\nimport styles from \"./LoginPage.module.css\"\r\n\r\ntype PropsType = {\r\n    setIsLogin: (val: boolean) => void\r\n}\r\n\r\nexport type FormType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const LoginPage: React.FC<PropsType> = ({setIsLogin}) => {\r\n\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const [error, setError] = useState<null | string>(null)\r\n\r\n    const changeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setForm( f => ({...f, [event.target.name]: event.target.value}))\r\n    }\r\n\r\n    const loginHandler = (form: FormType) => {\r\n        if (form.email !== \"123123@mail.ru\") {\r\n            setError(\"Вы ввели неверный email!\")\r\n        } else if (form.password !== \"123123\") {\r\n            setError(\"Вы ввели неверный пароль!\")\r\n        } else {\r\n            setIsLogin(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={styles.login}>\r\n                <h3>Log In</h3>\r\n                {error && <div className={styles.errorMessage}>{error}</div>}\r\n                <form className=\"col 12\" onSubmit={e => e.preventDefault()}>\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12\">\r\n                            <input type=\"email\" name=\"email\" className=\"validate\" onChange={changeHandler}/>\r\n                            <label className=\"active\" htmlFor=\"email\">Email</label>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input type=\"password\" name=\"password\" className=\"validate\" onChange={changeHandler}/>\r\n                            <label className=\"active\" htmlFor=\"password\">Password</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <button className=\"wawes-effect wawes-light btn blue\"\r\n                                onClick={() => loginHandler(form)}>Sign in\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\ntype PropsType = {\r\n    logoutHandler: () => void\r\n}\r\n\r\nexport const Navbar: React.FC<PropsType> = ({logoutHandler}) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue\">\r\n                <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\r\n                    <li><Link to='/'>Профиль</Link></li>\r\n                    <li><Link to='/callhistory'>История звонков</Link></li>\r\n                    <li><Link to='/balance'>Баланс</Link></li>\r\n                </ul>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li onClick={logoutHandler}><a href=\"/\">Выход</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/redux-store\"\r\nimport {ProfileType} from \"../../../redux/profile-reducer\"\r\nimport styles from \"./ProfilePage.module.css\"\r\n\r\nexport const ProfilePage = () => {\r\n\r\n    const data = useSelector<AppRootStateType, ProfileType>(state => state.profile.data)\r\n\r\n    return (\r\n        <div className={styles.profileContainer}>\r\n            <div className={styles.profile}>\r\n                <div className=\"col 4\">\r\n                    <img className={styles.avatar} src={data.avatar} alt=\"avatar\"/>\r\n                </div>\r\n                <div className=\"col 8\">\r\n                    <h2 className={styles.profileName}>{data.name}</h2>\r\n                    <h6 className={styles.profileInfo}>Тарифный план: {data[\"package of services\"]}</h6>\r\n                    <h6 className={styles.profileInfo}>Дата регистрации: {data[\"registration date\"]}</h6>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styles from \"./Paginator.module.css\"\r\n\r\ntype PropsPaginatorType ={\r\n    pageSize: number\r\n    totalCount: number\r\n    currentPage: number\r\n    setCurrentPage: (page: number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<PropsPaginatorType> = React.memo((\r\n    {pageSize, totalCount, currentPage, setCurrentPage}) => {\r\n\r\n    const paginate = (pageNumber: number) => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.paginatorContainer}>\r\n            <ul className=\"pagination\">\r\n                {\r\n                    pages.map(num => (\r\n                        <li key={num} className={ num === currentPage ? \"active\" : \"waves-effect\"}>\r\n                            <a onClick={() => paginate(num)} href=\"#!\">{num}</a>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n","export const arrayPartialSelector = <Type>(array: Type[], currentPage: number, pageSize: number): Type[] => {\r\n    const last = currentPage * pageSize\r\n    const first = last - pageSize\r\n    return array.slice(first, last)\r\n}\r\n","import React, {useMemo, useState} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/redux-store\"\r\nimport {CallType} from \"../../../redux/profile-reducer\"\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\"\r\nimport {arrayPartialSelector} from \"../../../redux/selectors\"\r\nimport styles from \"./CallHostoryPage.module.css\"\r\n\r\nexport const CallHistoryPage = () => {\r\n\r\n    const data = useSelector<AppRootStateType, Array<CallType>>(state => state.profile.data.calls)\r\n\r\n    let [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageSize = 10\r\n\r\n    const current = useMemo(() =>\r\n        arrayPartialSelector(data, currentPage, pageSize),\r\n        [data, currentPage, pageSize]\r\n    )\r\n\r\n    return (\r\n        <div className={styles.callContainer}>\r\n            <h2>История звонков</h2>\r\n            <table className=\"striped centered\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата</th>\r\n                    <th>Время</th>\r\n                    <th>Продолжительность</th>\r\n                    <th>Стоимость</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {current.map(call => {\r\n                    return (\r\n                        <tr key={call.id}>\r\n                            <td>{call.date}</td>\r\n                            <td>{call.time}</td>\r\n                            <td>{call.duration} сек.</td>\r\n                            <td>{call.cost} руб.</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            <Paginator pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       totalCount={data.length}\r\n                       setCurrentPage={setCurrentPage}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useMemo, useState} from \"react\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/redux-store\"\r\nimport {PaymentType} from \"../../../redux/profile-reducer\"\r\nimport {Paginator} from \"../../../common/Paginator/Paginator\"\r\nimport {arrayPartialSelector} from \"../../../redux/selectors\"\r\nimport styles from \"./BalancePage.module.css\"\r\n\r\nexport const BalancePage = () => {\r\n\r\n    const data = useSelector<AppRootStateType, Array<PaymentType>>(state =>\r\n        state.profile.data[\"balance history\"])\r\n\r\n    let [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const pageSize = 10\r\n\r\n    const current = useMemo(() =>\r\n            arrayPartialSelector(data, currentPage, pageSize),\r\n        [data, currentPage, pageSize]\r\n    )\r\n\r\n    let balance = data.map(o => o.payment).reduce ((sum, item) => sum + item)\r\n\r\n    return (\r\n        <div className={styles.balanceContainer}>\r\n            <h2>Текущий баланс: {balance}</h2>\r\n            <table className=\"striped centered\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Дата</th>\r\n                    <th>Время</th>\r\n                    <th>Пополнение/Списание</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {current.map(payment => {\r\n                    return (\r\n                        <tr key={payment.id}>\r\n                            <td>{payment.date}</td>\r\n                            <td>{payment.time}</td>\r\n                            <td>{payment.payment} руб.</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            <Paginator pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       totalCount={data.length}\r\n                       setCurrentPage={setCurrentPage}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from \"react\"\r\nimport {useDispatch} from \"react-redux\"\r\nimport {Route} from \"react-router-dom\"\r\nimport {getProfile} from \"../../redux/profile-reducer\"\r\nimport {Navbar} from \"./Navbar/Navbar\"\r\nimport {ProfilePage} from \"./ProfilePage/ProfilePage\"\r\nimport {CallHistoryPage} from \"./CallHistoryPage/CallHistoryPage\"\r\nimport {BalancePage} from \"./BalancePage/BalancePage\"\r\n\r\n\r\ntype PropsType = {\r\n    logoutHandler: () => void\r\n}\r\n\r\nexport const PersonalAccount: React.FC<PropsType>  = ({logoutHandler}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        //requesting data from API on render\r\n        dispatch(getProfile())\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Navbar logoutHandler={logoutHandler}/>\r\n            <div className=\"app-content\">\r\n                <Route exact path=\"/\" render={() => <ProfilePage/>}/>\r\n                <Route path=\"/callhistory\" render={() => <CallHistoryPage/>}/>\r\n                <Route path=\"/balance\" render={() => <BalancePage/>}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from \"react\"\nimport {Route, useHistory} from \"react-router-dom\"\nimport {LoginPage} from \"./components/LoginPage/LoginPage\"\nimport {PersonalAccount} from \"./components/PersonalAccount/PersonalAccount\"\nimport \"./App.css\"\n\nexport const App = () => {\n\n    const [isLogin, setIsLogin] = useState(false)\n\n    const history = useHistory()\n\n    const logoutHandler = () => {\n        setIsLogin(false)\n        history.push(\"/\")\n    }\n\n    return (\n        <div className=\"App\">\n            {isLogin\n                ? <PersonalAccount logoutHandler={logoutHandler}/>\n                : <Route path=\"/\" render={() => <LoginPage setIsLogin={setIsLogin}/>}/>\n            }\n        </div>\n    )\n}\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/redux-store\"\nimport {App} from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </BrowserRouter>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}